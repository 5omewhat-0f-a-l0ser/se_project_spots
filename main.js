!function(){"use strict";var e="",t=e+"d3610e9c6dce3cb370d8.svg",r=e+"2fc47fd8e9a9bcd9612f.jpg",o=e+"d38272e02bb4f1ab1c37.svg",n=e+"40608da7369d39bc1077.svg";const a={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit",inactiveButtonClass:"modal__submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},c=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),o.textContent=""},l=(e,t,r)=>{t&&((e=>Array.from(e).some((e=>!e.validity.valid)))(e)?d(t,r):s(t,r))},s=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1},d=(e,t)=>{console.log(e),e&&(e.classList.add(t.inactiveButtonClass),e.disabled=!0)};(e=>{document.querySelectorAll(e.formSelector).forEach((t=>{((e,t)=>{const r=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);l(r,o,t),r.forEach((n=>{n.addEventListener("input",(function(){((e,t,r)=>{t.validity.valid?c(e,t,r):((e,t,r,o)=>{const n=e.querySelector(`#${t.id}-error`);console.log(n),t.classList.add(o.inputErrorClass),n.textContent=r})(e,t,t.validationMessage,r)})(e,n,t),l(r,o,t)}))}))})(t,e)}))})(a),document.getElementById("logo").src=t,document.getElementById("profile-pic").src=r,document.getElementById("edit-pen").src=o,document.getElementById("new-post").src=n;const i=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log("Error fetching data",e)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then((e=>e.json()))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.json())).then((e=>console.log(e))).catch((e=>console.error("Error:",e)))}editAvatarInfo(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>e.json())).then((e=>{console.log("Success:",e)})).catch((e=>console.error("Error:",e)))}addNewCard(e){let{cardName:t,cardLink:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log("Error fetching data",e)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log("Error fetching data",e)}))}likeCard(){return fetch(`${this._baseUrl}/cards/${cardId}/likes`,{method:"PATCH",headers:this._headers}).then((e=>e.json())).then((e=>console.log(e))).catch((e=>console.error("Error:",e)))}unLikeCard(){return fetch(`${this._baseUrl}/cards/${cardId}/likes`,{method:"DELETE",headers:this._headers}).then((e=>e.json())).then((e=>console.log(e))).catch((e=>console.error("Error:",e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"5b40f66f-c611-4855-8659-c2085a4f3c96","Content-Type":"application/json"}}),u=document.querySelector(".profile__edit-btn"),m=document.querySelector(".profile__name"),_=document.querySelector(".profile__description"),h=document.querySelector(".profile__add-btn"),f=document.querySelector(".profile__avatar-btn"),y=document.querySelector("#edit-profile-modal"),v=y.querySelector(".modal__form"),S=y.querySelector(".modal__close"),p=y.querySelector(".modal__submit"),E=y.querySelector("#profile-name-input"),q=document.querySelector("#profile-description-input"),b=document.querySelector("#add-card-modal"),g=b.querySelector(".modal__close"),L=b.querySelector(".modal__submit"),k=b.querySelector(".modal__form"),C=b.querySelector("#add-card-link-input"),$=b.querySelector("#add-card-caption-input"),I=document.querySelector("#preview-modal"),U=I.querySelector(".modal__image"),j=I.querySelector(".modal__caption"),A=I.querySelector(".modal__close"),B=document.querySelector("#avatar-modal"),w=B.querySelector(".modal__close"),x=B.querySelector(".modal__submit"),N=B.querySelector(".modal__form"),P=B.querySelector("#profile-avatar-input"),T=document.querySelector("#delete-card-modal"),D=T.querySelector(".modal__close"),O=(T.querySelector(".modal__submit"),T.querySelector(".modal__form")),H=document.querySelector("#card-template"),J=document.querySelector(".cards__list");let z,G;function M(e){const t=H.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete");return r.textContent=e.name,o.src=e.link,o.alt=e.name,n.addEventListener("click",(()=>{n.classList.toggle("card__like-btn_liked")})),a.addEventListener("click",(()=>{!function(e,t){z=e,G=t,F(T)}(t,e),t.remove()})),o.addEventListener("click",(()=>{F(I),j.textContent=e.name,U.src=e.link,U.alt=e.name})),t}function F(e){e.classList.add("modal_opened"),document.addEventListener("keydown",Q)}function K(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",Q)}function Q(e){"Escape"===e.key&&K(document.querySelector(".modal_opened"))}function R(e){e.target.classList.contains("modal")&&K(e.target)}document.querySelector(".card"),i.getAppInfo().then((e=>{let[t,r,o]=e;t.forEach(((e,t,r)=>{const o=M(e);J.append(o)}))})).catch((e=>{console.error("Error fetching initial cards:",e)})),A.addEventListener("click",(e=>{K(I)})),u.addEventListener("click",(()=>{F(y),((e,t,r)=>{t.forEach((t=>{c(e,t,r)}))})(v,[E,q],a),E.value=m.textContent,q.value=_.textContent})),S.addEventListener("click",(e=>{K(y)})),h.addEventListener("click",(()=>{F(b)})),g.addEventListener("click",(e=>{K(b)})),f.addEventListener("click",(()=>{F(B)})),w.addEventListener("click",(e=>{K(B)})),D.addEventListener("click",(e=>{K(T)})),v.addEventListener("submit",(function(e){e.preventDefault(),m.textContent=E.value,_.textContent=q.value,d(p,a),K(y)})),k.addEventListener("submit",(function(e){e.preventDefault();const t={cardName:$.value,cardLink:C.value};e.target.querySelector(".modal__button"),i.addNewCard(t).then((t=>{const r=M(t);J.prepend(r),K(b),e.target.reset(),d(L,a)})).catch(console.error)})),N.addEventListener("submit",(function(e){e.preventDefault();const t={avatar:P.value};i.editAvatarInfo(t),e.target.reset(),d(x,a),K(B)})),O.addEventListener("submit",(function(){i.deleteCard(G).then((()=>{cardElement.remove(z),z.remove(),K(O)})).catch(console.error)})),document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("mousedown",R)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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US9CLEdBQ2xCYSxFQUFXcEMsR0FDWHNDLEVBQUlHLE9BQU9jLFFBQ1hySSxFQUFjZ0YsRUFBZXpHLEVBQU8sSUFFckNtRSxNQUFNdkMsUUFBUXdDLE1BRW5CLElBc0RBZ0QsRUFBa0JqRixpQkFBaUIsVUF4Q25DLFNBQWdDMEcsR0FDNUJBLEVBQUljLGlCQUNKLE1BQU1JLEVBQWMsQ0FBQzlFLE9BQVFvQyxFQUFXcUMsT0FDeEMzRyxFQUFJZ0MsZUFBZWdGLEdBQ25CbEIsRUFBSUcsT0FBT2MsUUFDWHJJLEVBQWMwRixFQUFjbkgsR0FDNUIySSxFQUFXMUIsRUFDZixJQWtDQU8sRUFBa0JyRixpQkFBaUIsVUFyRG5DLFdBQ0lZLEVBQ0d3QyxXQUFXcUMsR0FDWC9ELE1BQUssS0FDSmlFLFlBQVloSCxPQUFPNkcsR0FDbkJBLEVBQWE3RyxTQUNiNkgsRUFBV25CLEVBQWtCLElBRTlCckQsTUFBTXZDLFFBQVF3QyxNQUVyQixJQXVEZXJDLFNBQVNDLGlCQUFpQixVQVFsQ0MsU0FBU3dHLElBQ1pBLEVBQU10RyxpQkFBaUIsWUFBYTRHLEVBQWEsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X3Nwb3RzLy4vc3JjL3NjcmlwdHMvdmFsaWRhdGlvbi5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X3Nwb3RzLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvdXRpbHMvYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiOyIsImV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fc3VibWl0XCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX3N1Ym1pdF9kaXNhYmxlZFwiLCAvL0kgZG9uJ3QgdGhpbmsgSSBoYXZlIHRoaXMgaW4gbXkgZmlsZSwgYnV0IHgzIDEwIHNheXMgdG8gaGF2ZSBpdFxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JcIixcbn07XG5cbi8vSW5wdXRzXG5jb25zdCBzaG93SW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UsIGNvbmZpZykgPT4ge1xuICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gIGNvbnNvbGUubG9nKGVycm9yRWxlbWVudCk7XG4gIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKGNvbmZpZy4gaW5wdXRFcnJvckNsYXNzKTtcbiAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xufTtcblxuY29uc3QgaGlkZUlucHV0RXJyb3IgPSAoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgY29uZmlnKSA9PiB7XG4gIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLiBpbnB1dEVycm9yQ2xhc3MpOyAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbn07XG5cbmNvbnN0IGNoZWNrSW5wdXRWYWxpZGl0eSA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpID0+IHtcbmlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gIHNob3dJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSwgY29uZmlnKTtcbiAgfSBlbHNlIHtcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpO1xuICB9XG59O1xuXG5jb25zdCBoYXNJbnZhbGlkSW5wdXQgPSAoaW5wdXRMaXN0KSA9PiB7XG4gIGNvbnN0IGlucHV0c0FycmF5ID0gQXJyYXkuZnJvbShpbnB1dExpc3QpO1xuICByZXR1cm4gaW5wdXRzQXJyYXkuc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgfSk7XG59O1xuXG4vL2J1dHRvbnModGhlIGJhbmUgb2YgZXZlciBsb3ZpbmcgZXhpc3RlbmNlKVxuY29uc3QgdG9nZ2xlQnV0dG9uU3RhdGUgPSAoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBjb25maWcpID0+IHtcbiAgaWYgKCFidXR0b25FbGVtZW50KSByZXR1cm47IC8vIEV4aXQgaWYgYnV0dG9uRWxlbWVudCBpcyBub3QgZm91bmRcblxuICBpZiAoaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcbiAgICBkaXNhYmxlQnV0dG9uKGJ1dHRvbkVsZW1lbnQsIGNvbmZpZyk7IC8vVHV0b3JzIHNheSB0aGlzIHNob3VsZCBiZSBjb3JyZWN0XG4gIH0gIGVsc2Uge1xuICAgIGVuYWJsZUJ1dHRvbihidXR0b25FbGVtZW50LCBjb25maWcpO1xuICB9XG59O1xuXG4vLyBkaXNhYmxlL2VuYWJsZVxuY29uc3QgZW5hYmxlQnV0dG9uID0gKGJ1dHRvbkVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XG59O1xuXG5cbmV4cG9ydCBjb25zdCBkaXNhYmxlQnV0dG9uID0gKGJ1dHRvbkVsZW1lbnQsIGNvbmZpZykgPT4ge1xuY29uc29sZS5sb2coYnV0dG9uRWxlbWVudCk7IC8vIFRvIGNoZWNrIGlmIHRoZSBidXR0b24gZWxlbWVudCBpcyBjb21pbmcgdGhyb3VnaFxuaWYgKGJ1dHRvbkVsZW1lbnQpIHsgIC8vIFRoaXMgY2hlY2tzIGlmIGJ1dHRvbkVsZW1lbnQgaXMgZGVmaW5lZFxuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCByZXNldFZhbGlkYXRpb24gPSAoZm9ybUVsZW1lbnQsIGlucHV0TGlzdCwgY29uZmlnKSA9PiB7XG4gIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpO1xuICB9KTtcbn07XG5cbmNvbnN0IHNldEV2ZW50TGlzdGVuZXJzID0gKGZvcm1FbGVtZW50LCBjb25maWcpID0+IHtcbmNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuaW5wdXRTZWxlY3RvcikpO1xuY29uc3QgYnV0dG9uRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxudG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBjb25maWcpO1xuXG5pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24gKCkge1xuICAgIGNoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpO1xuICAgIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgY29uZmlnKTtcbiAgfSk7XG59KTtcbn07XG5cbmV4cG9ydCBjb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKGNvbmZpZykgPT4ge1xuICBjb25zdCBmb3JtTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3Rvcik7XG4gIGZvcm1MaXN0LmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XG4gICBzZXRFdmVudExpc3RlbmVycyhmb3JtRWxlbWVudCwgY29uZmlnKTtcbiAgfSk7XG59O1xuXG5lbmFibGVWYWxpZGF0aW9uKGNvbmZpZyk7IiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL3V0aWxzL2FwaS5qc1wiO1xuXG5pbXBvcnQgbG9nb0VsIGZyb20gXCIuLi9pbWFnZS9sb2dvLnN2Z1wiO1xuY29uc3QgbG9nb0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ29cIik7XG5sb2dvRWxlbWVudC5zcmMgPSBsb2dvRWw7XG5cbmltcG9ydCBwcm9maWxlUGljIGZyb20gXCIuLi9pbWFnZS9hdmF0YXIuanBnXCI7XG5jb25zdCBwcm9maWxlUGljRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2ZpbGUtcGljXCIpO1xucHJvZmlsZVBpY0VsLnNyYyA9IHByb2ZpbGVQaWM7XG5cbmltcG9ydCBlZGl0UGVuIGZyb20gXCIuLi9pbWFnZS9lZGl0LXByb2ZpbGUtcGVuLnN2Z1wiO1xuY29uc3QgZWRpdFBlbkVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlZGl0LXBlblwiKTtcbmVkaXRQZW5FbC5zcmMgPSBlZGl0UGVuO1xuXG5pbXBvcnQgbmV3UG9zdCBmcm9tIFwiLi4vaW1hZ2UvbmV3LXBvc3QtYnRuLnN2Z1wiO1xuY29uc3QgbmV3UG9zdEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXctcG9zdFwiKTtcbm5ld1Bvc3RFbC5zcmMgPSBuZXdQb3N0O1xuXG5pbXBvcnQgeyBlbmFibGVWYWxpZGF0aW9uLCByZXNldFZhbGlkYXRpb24sIGRpc2FibGVCdXR0b24sIGNvbmZpZyB9IGZyb20gXCIuLi9zY3JpcHRzL3ZhbGlkYXRpb24uanNcIjtcblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gICAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIGF1dGhvcml6YXRpb246IFwiNWI0MGY2NmYtYzYxMS00ODU1LTg2NTktYzIwODVhNGYzYzk2XCIsXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH1cbn0pO1xuXG4vL2FwaS5nZXRJbml0aWFsQ2FyZHMoKVxuLy8udGhlbihjYXJkcyA9PiB7XG4vL2lmIChBcnJheS5pc0FycmF5KGNhcmRzKSkge1xuLy8gICAgY2FyZHMuZm9yRWFjaCgoaXRlbSwgaSwgYXJyKSA9PiB7XG4vLyAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBnZXRDYXJkRWxlbWVudChpdGVtKTtcbi8vICAgICAgICBjYXJkc0xpc3QuYXBwZW5kKGNhcmRFbGVtZW50KTtcbi8vICAgIH0pO1xuLy99IGVsc2Uge1xuLy8gICAgY29uc29sZS5lcnJvcignUmVjZWl2ZWQgZGF0YSBpcyBub3QgYW4gYXJyYXk6JywgY2FyZHMpO1xuLy99XG4vL30pXG4vLy5jYXRjaCgoZXJyb3IpID0+IHtcbi8vICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGluaXRpYWwgY2FyZHM6JywgZXJyb3IpXG4vL30pO1xuXG5cbmNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAgICB7bmFtZTogXCJWYWwgVGhvcmVuc1wiLCBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvc3BvdHMvMS1waG90by1ieS1tb3JpdHotZmVsZG1hbm4tZnJvbS1wZXhlbHMuanBnXCJ9LFxuICAgIHtuYW1lOiBcIlJlc3R1cmFudCB0ZXJyYW5jZVwiLCBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvc3BvdHMvMi1waG90by1ieS1jZWlsaW5lLWZyb20tcGV4ZWxzLmpwZ1wifSxcbiAgICB7bmFtZTogXCJBbiBvdXRkb29yIGNhZmVcIiwgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL3Nwb3RzLzMtcGhvdG8tYnktdHViYW51ci1kb2dhbi1mcm9tLXBleGVscy5qcGdcIn0sXG4gICAge25hbWU6IFwiQSB2ZXJ5IGxvbmcgYnJpZGdlLCBvdmVyIHRoZSBmb3Jlc3QgYW5kIHRocm91Z2ggdGhlIHRyZWVzXCIsIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9zcG90cy80LXBob3RvLWJ5LW1hdXJpY2UtbGFzY2hldC1mcm9tLXBleGVscy5qcGdcIn0sXG4gICAge25hbWU6IFwiVHVubmVsIHdpdGggbW9ybmluZyBsaWdodFwiLCBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvc3BvdHMvNS1waG90by1ieS12YW4tYW5oLW5ndXllbi1mcm9tLXBleGVscy5qcGdcIn0sXG4gICAge25hbWU6IFwiTW91bnRhaW4gaG91c2VcIiwgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL3Nwb3RzLzYtcGhvdG8tYnktbW9yaXR6LWZlbGRtYW5uLWZyb20tcGV4ZWxzLmpwZ1wifSxcbiAgICB7bmFtZTogXCJHb2xkZW4gR2F0ZSBCcmlkZ2VcIiwgbGluazogXCIgaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9zcG90cy83LXBob3RvLWJ5LWdyaWZmaW4td29vbGRyaWRnZS1mcm9tLXBleGVscy5qcGdcIn0sXG5dXG5cbmNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ0blwiKTtcbmNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xuY29uc3QgZGVzY3JpcHRpb25OYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcbmNvbnN0IGFkZENhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idG5cIik7XG5jb25zdCBlZGl0QXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXItYnRuXCIpO1xuXG5jb25zdCBlZGl0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtcHJvZmlsZS1tb2RhbFwiKTtcbmNvbnN0IGVkaXRGb3JtRWxlbWVudCA9IGVkaXRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuY29uc3QgZWRpdE1vZGFsQ2xvc2VCdXR0b24gPSBlZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XG5jb25zdCBlZGl0TW9kYWxTdWJtaXQgPSBlZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fc3VibWl0XCIpO1xuY29uc3QgZWRpdE1vZGFsTmFtZUlucHV0ID0gZWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1uYW1lLWlucHV0XCIpXG5jb25zdCBlZGl0TW9kYWxEZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWRlc2NyaXB0aW9uLWlucHV0XCIpO1xuXG5jb25zdCBhZGRDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZC1jYXJkLW1vZGFsXCIpO1xuY29uc3QgYWRkQ2FyZENsb3NlQnV0dG9uID0gYWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xuY29uc3QgYWRkQ2FyZFN1Ym1pdCA9IGFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXRcIik7XG5jb25zdCBhZGRGb3JtRWxlbWVudCA9IGFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuY29uc3QgYWRkQ2FyZExpbmsgPSBhZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1saW5rLWlucHV0XCIpO1xuY29uc3QgYWRkQ2FyZENhcHRpb24gPSBhZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1jYXB0aW9uLWlucHV0XCIpO1xuXG5jb25zdCBwcmV2aWV3TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3ByZXZpZXctbW9kYWxcIik7XG5jb25zdCBwcmV2aWV3TW9kYWxJbWFnZUVsID0gcHJldmlld01vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xuY29uc3QgcHJldmlld01vZGFsQ2FwdGlvbkVsID0gcHJldmlld01vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XG5jb25zdCBwcmV2aWV3TW9kYWxDbG9zZUJ1dHRvbiA9IHByZXZpZXdNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcblxuY29uc3QgYXZhdGFyTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1tb2RhbFwiKTtcbmNvbnN0IGF2YXRhckNsb3NlQnV0dG9uID0gYXZhdGFyTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XG5jb25zdCBhdmF0YXJTdWJtaXQgPSBhdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXRcIik7XG5jb25zdCBhdmF0YXJGb3JtRWxlbWVudCA9IGF2YXRhck1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG5jb25zdCBhdmF0YXJMaW5rID0gYXZhdGFyTW9kYWwucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWF2YXRhci1pbnB1dFwiKTtcblxuY29uc3QgZGVsZXRlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1jYXJkLW1vZGFsXCIpO1xuY29uc3QgZGVsZXRlQ2xvc2VCdXR0b24gPSBkZWxldGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcbmNvbnN0IGRlbGV0ZVN1Ym1pdCA9IGRlbGV0ZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3N1Ym1pdFwiKTtcbmNvbnN0IGRlbGV0ZUZvcm1FbGVtZW50ID0gZGVsZXRlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcblxuXG5jb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtdGVtcGxhdGVcIik7XG5jb25zdCBjYXJkc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xuY29uc3QgY2FyZENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKTtcblxubGV0IHNlbGVjdGVkQ2FyZDtcbmxldCBzZWxlY3RlZENhcmRJZDtcblxuZnVuY3Rpb24gZ2V0Q2FyZEVsZW1lbnQoZGF0YSkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZFRlbXBsYXRlLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpLmNsb25lTm9kZSh0cnVlKTtcbiAgICBjb25zdCBjYXJkTmFtZUVsID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcbiAgICBjb25zdCBjYXJkSW1hZ2VFbCA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgY29uc3QgY2FyZExpa2VCdXR0b24gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnRuXCIpO1xuICAgIGNvbnN0IGNhcmREZWxldGVCdXR0b24gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZVwiKTtcblxuICAgIGNhcmROYW1lRWwudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgY2FyZEltYWdlRWwuc3JjID0gZGF0YS5saW5rO1xuICAgIGNhcmRJbWFnZUVsLmFsdCA9IGRhdGEubmFtZTtcblxuICAgIGNhcmRMaWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGNhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlLWJ0bl9saWtlZFwiKTtcbiAgICB9KTtcblxuICAgIGNhcmREZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgaGFuZGxlRGVsZXRlQ2FyZChjYXJkRWxlbWVudCwgZGF0YSk7XG4gICAgICAgIGNhcmRFbGVtZW50LnJlbW92ZSgpO1xuICAgIH0pXG5cbiAgICBjYXJkSW1hZ2VFbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBvcGVuTW9kYWwocHJldmlld01vZGFsKTtcbiAgICAgICAgcHJldmlld01vZGFsQ2FwdGlvbkVsLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgICAgICBwcmV2aWV3TW9kYWxJbWFnZUVsLnNyYyA9IGRhdGEubGluaztcbiAgICAgICAgcHJldmlld01vZGFsSW1hZ2VFbC5hbHQgPSBkYXRhLm5hbWU7XG4gICAgfSlcblxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcbiAgICBcbn07XG5cbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmQoY2FyZEVsZW1lbnQsIGRhdGEpIHtcbiAgICBzZWxlY3RlZENhcmQgPSBjYXJkRWxlbWVudDsgLy8gQXNzaWduIHRoZSBjYXJkIGVsZW1lbnQgdG8gc2VsZWN0ZWRDYXJkXG4gICAgc2VsZWN0ZWRDYXJkSWQgPSBkYXRhO1xuICAgIG9wZW5Nb2RhbChkZWxldGVNb2RhbCk7XG59XG5cblxuXG5cbmFwaVxuICAuZ2V0QXBwSW5mbygpXG4gIC50aGVuKChbY2FyZHMsIHVzZXJEYXRhLCBlZGl0RGF0YV0pID0+IHtcbiAgICBjYXJkcy5mb3JFYWNoKChpdGVtLCBpLCBhcnIpID0+IHtcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZ2V0Q2FyZEVsZW1lbnQoaXRlbSk7XG4gICAgICBjYXJkc0xpc3QuYXBwZW5kKGNhcmRFbGVtZW50KTtcbiAgICB9KTtcbiAgfSlcbiAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBpbml0aWFsIGNhcmRzOlwiLCBlcnJvcik7XG4gIH0pO1xuXG5wcmV2aWV3TW9kYWxDbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgIGNsb3NlTW9kYWwocHJldmlld01vZGFsKTtcbn0pO1xuXG5mdW5jdGlvbiBvcGVuTW9kYWwobW9kYWwpIHtcbiAgICBtb2RhbC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGNsb3NlTW9kYWxFc2MpO1xufVxuXG5mdW5jdGlvbiBjbG9zZU1vZGFsKG1vZGFsKSB7XG4gICBtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VNb2RhbEVzYyk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUVkaXRGb3JtU3VibWl0KGV2dCkge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gZWRpdE1vZGFsTmFtZUlucHV0LnZhbHVlO1xuICAgIGRlc2NyaXB0aW9uTmFtZS50ZXh0Q29udGVudCA9IGVkaXRNb2RhbERlc2NyaXB0aW9uSW5wdXQudmFsdWU7XG4gICAgZGlzYWJsZUJ1dHRvbihlZGl0TW9kYWxTdWJtaXQsIGNvbmZpZyk7XG4gICAgY2xvc2VNb2RhbChlZGl0TW9kYWwpO1xufTtcblxuZnVuY3Rpb24gaGFuZGxlQWRkRm9ybVN1Ym1pdChldnQpIHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBmb3JtRGF0YSA9IHtjYXJkTmFtZTogYWRkQ2FyZENhcHRpb24udmFsdWUsIGNhcmRMaW5rOiBhZGRDYXJkTGluay52YWx1ZSB9O1xuICAgIC8vIGNvbnN0IGNhcmRFbGVtZW50ID0gZ2V0Q2FyZEVsZW1lbnQoaW5wdXRWYWx1ZXMpO1xuICAgIGNvbnN0IGJ1dHRvbiA9IGV2dC50YXJnZXQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpO1xuICAgIC8vIHNldEJ1dHRvblRleHQoYnV0dG9uLCB0cnVlKTtcblxuICBhcGlcbiAgICAuYWRkTmV3Q2FyZChmb3JtRGF0YSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGdldENhcmRFbGVtZW50KHJlcyk7XG4gICAgICBjYXJkc0xpc3QucHJlcGVuZChjYXJkRWxlbWVudCk7XG4gICAgICBjbG9zZU1vZGFsKGFkZENhcmRNb2RhbCk7XG4gICAgICBldnQudGFyZ2V0LnJlc2V0KCk7XG4gICAgICBkaXNhYmxlQnV0dG9uKGFkZENhcmRTdWJtaXQsIGNvbmZpZyk7XG4gICAgfSlcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG4gICAgICAvLyAuZmluYWxseSgoKSA9PiBzZXRCdXR0b25UZXh0KGJ1dHRvbiwgZmFsc2UpKTtcbn07XG5cbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZVN1Ym1pdCgpIHtcbiAgICBhcGlcbiAgICAgIC5kZWxldGVDYXJkKHNlbGVjdGVkQ2FyZElkKSAvLyBwYXNzIHRoZSBJRCB0aGUgdGhlIGFwaSBmdW5jdGlvblxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBjYXJkRWxlbWVudC5yZW1vdmUoc2VsZWN0ZWRDYXJkKTtcbiAgICAgICAgc2VsZWN0ZWRDYXJkLnJlbW92ZSgpXG4gICAgICAgIGNsb3NlTW9kYWwoZGVsZXRlRm9ybUVsZW1lbnQpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcbiAgICAgIC8vLmZpbmFsbHkoKCkgPT4gc2V0QnV0dG9uVGV4dChidXR0b24sIGZhbHNlLCBcIkRlbGV0ZVwiLCBcIkRlbGV0aW5nLi4uXCIpKTtcbn07XG5cbmZ1bmN0aW9uIGhhbmRsZUF2YXRhckZvcm1TdWJtaXQoZXZ0KSB7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgYXZhdGFySW5wdXQgPSB7YXZhdGFyOiBhdmF0YXJMaW5rLnZhbHVlIH07XG4gICAgYXBpLmVkaXRBdmF0YXJJbmZvKGF2YXRhcklucHV0KTtcbiAgICBldnQudGFyZ2V0LnJlc2V0KCk7XG4gICAgZGlzYWJsZUJ1dHRvbihhdmF0YXJTdWJtaXQsIGNvbmZpZyk7XG4gICAgY2xvc2VNb2RhbChhdmF0YXJNb2RhbCk7XG59O1xuXG5cbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgb3Blbk1vZGFsKGVkaXRNb2RhbCk7XG4gICAgcmVzZXRWYWxpZGF0aW9uKGVkaXRGb3JtRWxlbWVudCwgW2VkaXRNb2RhbE5hbWVJbnB1dCwgZWRpdE1vZGFsRGVzY3JpcHRpb25JbnB1dF0sY29uZmlnKTtcbiAgICBlZGl0TW9kYWxOYW1lSW5wdXQudmFsdWUgPSBwcm9maWxlTmFtZS50ZXh0Q29udGVudDtcbiAgICBlZGl0TW9kYWxEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gZGVzY3JpcHRpb25OYW1lLnRleHRDb250ZW50O1xufSk7XG5lZGl0TW9kYWxDbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgIGNsb3NlTW9kYWwoZWRpdE1vZGFsKTtcbn0pO1xuXG5hZGRDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgb3Blbk1vZGFsKGFkZENhcmRNb2RhbCk7XG59KTtcbmFkZENhcmRDbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgIGNsb3NlTW9kYWwoYWRkQ2FyZE1vZGFsKTtcbn0pO1xuZWRpdEF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIG9wZW5Nb2RhbChhdmF0YXJNb2RhbCk7XG59KTtcbmF2YXRhckNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgY2xvc2VNb2RhbChhdmF0YXJNb2RhbCk7XG59KTtcbmRlbGV0ZUNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgY2xvc2VNb2RhbChkZWxldGVNb2RhbClcbn0pO1xuXG5cblxuZWRpdEZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlRWRpdEZvcm1TdWJtaXQpO1xuYWRkRm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVBZGRGb3JtU3VibWl0KTtcbmF2YXRhckZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlQXZhdGFyRm9ybVN1Ym1pdCk7XG5kZWxldGVGb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZURlbGV0ZVN1Ym1pdCk7XG5cbmZ1bmN0aW9uIGNsb3NlTW9kYWxFc2MoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIGNvbnN0IG1vZGFsT3BlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfb3BlbmVkXCIpO1xuICAgICAgY2xvc2VNb2RhbChtb2RhbE9wZW4pO1xuICAgIH1cbn07XG5cblxuXG5cbmNvbnN0IG1vZGFscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxcIik7XG5cbmZ1bmN0aW9uIGNsb3NlT3ZlcmxheShldnQpIHtcbiAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbFwiKSkge1xuICAgICAgICBjbG9zZU1vZGFsKGV2dC50YXJnZXQpO1xuICAgIH1cbn07XG5cbm1vZGFscy5mb3JFYWNoKChtb2RhbCkgPT4ge1xuICAgIG1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgY2xvc2VPdmVybGF5KTtcbn0pO1xuXG4iLCJjbGFzcyBBcGkge1xuICAgIGNvbnN0cnVjdG9yKCB7YmFzZVVybCwgaGVhZGVyc30gKSB7XG4gICAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcbiAgICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzOyBcbiAgICB9XG5cbiAgICBnZXRBcHBJbmZvKCkge1xuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldEluaXRpYWxDYXJkcygpLCB0aGlzLmdldFVzZXJJbmZvKCldKVxuICAgIH1cblxuICBcbiAgICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLCBcbiAgICAgICAgfSlcbiAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3IgZmV0Y2hpbmcgZGF0YScsIGVycm9yKTtcbiAgICAgICAgICB9KTtcbiAgICB9XG4gIFxuICAgIC8vIGNyZWF0ZSBtb3JlIG1ldGhvZHMoaWU6IGdldFVzZXJJbmZvLCBldGMuKSBmb3IgdGhlIGFwaSB3aXRoIGEgZGlmZiBiYXNlVXJsXG4gICAgLy8tLXVzZXIvYXZhdGFyIGZ1bmN0aW9ucy0tXG4gIFxuICAgIGdldFVzZXJJbmZvKCkge1xuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgICB9KVxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgICAgIFxuICAgIH1cblxuICAgIGVkaXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pIHtcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgbmFtZSxcbiAgICAgICAgICBhYm91dCxcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAgICAgLnRoZW4oZGF0YSA9PiBjb25zb2xlLmxvZyhkYXRhKSlcbiAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yOicsIGVycm9yKSk7XG4gICAgfVxuXG4gICAgZWRpdEF2YXRhckluZm8oeyBhdmF0YXIgfSkge1xuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgYXZhdGFyXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgICAgLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzOicsIGRhdGEpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnJvcikpO1xuICAgIH1cbiAgICAvLy0tY2FyZCBmdW5jdGlvbnMtLVxuXG4gICAgYWRkTmV3Q2FyZCh7Y2FyZE5hbWUsIGNhcmRMaW5rfSkge1xuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIG5hbWU6IGNhcmROYW1lLCAvLyBjYXJkTmFtZSBzaG91bGQgYmUgeW91ciBjYXJkJ3MgbmFtZSB2YXJpYWJsZVxuICAgICAgICAgIGxpbms6IGNhcmRMaW5rICAvLyBjYXJkTGluayBzaG91bGQgYmUgeW91ciBjYXJkJ3MgbGluayB2YXJpYWJsZVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdFcnJvciBmZXRjaGluZyBkYXRhJywgZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcbiAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgICAgfSlcbiAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ0Vycm9yIGZldGNoaW5nIGRhdGEnLCBlcnJvcik7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLy0tLUxpa2VzIGFuZCB1bmxpa2VzLS1cblxuICAgIGxpa2VDYXJkKCkge1xuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcbiAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgfSlcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgICAgICAudGhlbihkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpKVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcignRXJyb3I6JywgZXJyb3IpKTtcbiAgICB9XG4gICAgXG4gICAgdW5MaWtlQ2FyZCgpIHtcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICAgIG1ldGhvZDogJ0RFTEVURScsXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICB9KVxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgICAgIC50aGVuKGRhdGEgPT4gY29uc29sZS5sb2coZGF0YSkpXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnJvcikpO1xuICAgIH1cbn1cbiAgXG5leHBvcnQgZGVmYXVsdCBBcGk7Il0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJjb25maWciLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImhpZGVJbnB1dEVycm9yIiwiZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJlcnJvckVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaWQiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJ0ZXh0Q29udGVudCIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiaW5wdXRMaXN0IiwiYnV0dG9uRWxlbWVudCIsIkFycmF5IiwiZnJvbSIsInNvbWUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZUJ1dHRvbiIsImVuYWJsZUJ1dHRvbiIsImRpc2FibGVkIiwiY29uc29sZSIsImxvZyIsImFkZCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJzZXRFdmVudExpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJjaGVja0lucHV0VmFsaWRpdHkiLCJzaG93SW5wdXRFcnJvciIsImVycm9yTWVzc2FnZSIsInZhbGlkYXRpb25NZXNzYWdlIiwiZW5hYmxlVmFsaWRhdGlvbiIsImdldEVsZW1lbnRCeUlkIiwic3JjIiwibG9nb0VsIiwicHJvZmlsZVBpYyIsImVkaXRQZW4iLCJuZXdQb3N0IiwiYXBpIiwiY29uc3RydWN0b3IiLCJfcmVmIiwiYmFzZVVybCIsImhlYWRlcnMiLCJ0aGlzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImdldEFwcEluZm8iLCJQcm9taXNlIiwiYWxsIiwiZ2V0SW5pdGlhbENhcmRzIiwiZ2V0VXNlckluZm8iLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJyZWplY3QiLCJzdGF0dXMiLCJjYXRjaCIsImVycm9yIiwibWV0aG9kIiwicmVzcG9uc2UiLCJlZGl0VXNlckluZm8iLCJfcmVmMiIsIm5hbWUiLCJhYm91dCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsImVkaXRBdmF0YXJJbmZvIiwiX3JlZjMiLCJhdmF0YXIiLCJhZGROZXdDYXJkIiwiX3JlZjQiLCJjYXJkTmFtZSIsImNhcmRMaW5rIiwibGluayIsImRlbGV0ZUNhcmQiLCJjYXJkSWQiLCJsaWtlQ2FyZCIsInVuTGlrZUNhcmQiLCJhdXRob3JpemF0aW9uIiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlTmFtZSIsImRlc2NyaXB0aW9uTmFtZSIsImFkZENhcmRCdXR0b24iLCJlZGl0QXZhdGFyQnV0dG9uIiwiZWRpdE1vZGFsIiwiZWRpdEZvcm1FbGVtZW50IiwiZWRpdE1vZGFsQ2xvc2VCdXR0b24iLCJlZGl0TW9kYWxTdWJtaXQiLCJlZGl0TW9kYWxOYW1lSW5wdXQiLCJlZGl0TW9kYWxEZXNjcmlwdGlvbklucHV0IiwiYWRkQ2FyZE1vZGFsIiwiYWRkQ2FyZENsb3NlQnV0dG9uIiwiYWRkQ2FyZFN1Ym1pdCIsImFkZEZvcm1FbGVtZW50IiwiYWRkQ2FyZExpbmsiLCJhZGRDYXJkQ2FwdGlvbiIsInByZXZpZXdNb2RhbCIsInByZXZpZXdNb2RhbEltYWdlRWwiLCJwcmV2aWV3TW9kYWxDYXB0aW9uRWwiLCJwcmV2aWV3TW9kYWxDbG9zZUJ1dHRvbiIsImF2YXRhck1vZGFsIiwiYXZhdGFyQ2xvc2VCdXR0b24iLCJhdmF0YXJTdWJtaXQiLCJhdmF0YXJGb3JtRWxlbWVudCIsImF2YXRhckxpbmsiLCJkZWxldGVNb2RhbCIsImRlbGV0ZUNsb3NlQnV0dG9uIiwiZGVsZXRlRm9ybUVsZW1lbnQiLCJjYXJkVGVtcGxhdGUiLCJjYXJkc0xpc3QiLCJzZWxlY3RlZENhcmQiLCJzZWxlY3RlZENhcmRJZCIsImdldENhcmRFbGVtZW50IiwiY2FyZEVsZW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiY2FyZE5hbWVFbCIsImNhcmRJbWFnZUVsIiwiY2FyZExpa2VCdXR0b24iLCJjYXJkRGVsZXRlQnV0dG9uIiwiYWx0IiwidG9nZ2xlIiwib3Blbk1vZGFsIiwiaGFuZGxlRGVsZXRlQ2FyZCIsIm1vZGFsIiwiY2xvc2VNb2RhbEVzYyIsImNsb3NlTW9kYWwiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0Iiwia2V5IiwiY2xvc2VPdmVybGF5IiwidGFyZ2V0IiwiY29udGFpbnMiLCJjYXJkcyIsInVzZXJEYXRhIiwiZWRpdERhdGEiLCJpdGVtIiwiaSIsImFyciIsImFwcGVuZCIsInJlc2V0VmFsaWRhdGlvbiIsInZhbHVlIiwicHJldmVudERlZmF1bHQiLCJmb3JtRGF0YSIsInByZXBlbmQiLCJyZXNldCIsImF2YXRhcklucHV0Il0sInNvdXJjZVJvb3QiOiIifQ==